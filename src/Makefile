#
# Copyright (C) 2018 bzt (bztsrc@github)
#
# Permission is hereby granted, free of charge, to any person
# obtaining a copy of this software and associated documentation
# files (the "Software"), to deal in the Software without
# restriction, including without limitation the rights to use, copy,
# modify, merge, publish, distribute, sublicense, and/or sell copies
# of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be
# included in all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
# EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
# MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
# NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT
# HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,
# WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
# DEALINGS IN THE SOFTWARE.
#
#

SRCS = $(wildcard *.c)
OBJS = $(SRCS:.c=.o)
CFLAGS = -Wall -O2 -ffreestanding -nostdinc -nostdlib -nostartfiles
# CFLAGS = -Wall -O2 -ffreestanding -nostdinc -nostdlib -mcpu=cortex-a53+nosimd
CC = aarch64-linux-gnu-gcc
# CC = clang --target=aarch64-elf
LD = aarch64-linux-gnu-ld
# LD = ld.lld -m aarch64elf
OBJCOPY = aarch64-linux-gnu-objcopy
# OBJCOPY = llvm-objcopy
OBJDUMP = aarch64-linux-gnu-objdump
# OBJDUMP = llvm-objdump

all: clean kernel8.img kernel8.objdump

start.o: start.S
	$(CC) $(CFLAGS) -c $< -o $@

exception_table.o: exception_table.S
	$(CC) $(CFLAGS) -c $< -o $@

context_switch.o: context_switch.S
	$(CC) $(CFLAGS) -c $< -o $@

syscall.o: syscall.S
	$(CC) $(CFLAGS) -c $< -o $@

%.o: %.c
	$(CC) $(CFLAGS) -c $< -o $@

kernel8.img: start.o exception_table.o context_switch.o syscall.o $(OBJS)
	$(LD) -nostdlib start.o exception_table.o context_switch.o syscall.o $(OBJS) -T link.ld -o kernel8.elf
	$(OBJCOPY) -O binary kernel8.elf kernel8.img

kernel8.objdump: kernel8.elf
	$(OBJDUMP) -d kernel8.elf > kernel8.objdump

clean:
	rm kernel8.elf *.o >/dev/null 2>/dev/null || true

run:
	qemu-system-aarch64 -M raspi3b -kernel kernel8.img -serial null -serial stdio -initrd ./initramfs/initramfs.cpio -dtb ./devicetree/bcm2710-rpi-3-b-plus.dtb

debug:
	qemu-system-aarch64 -M raspi3b -kernel kernel8.img -serial null -serial stdio -initrd ./initramfs/initramfs.cpio -dtb ./devicetree/bcm2710-rpi-3-b-plus.dtb -S -s

